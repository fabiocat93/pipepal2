name: Publish to PyPI

on:
  # ATM, this is the closest trigger to a PR merging
  push:
    branches:
      - main

# on:
#  release:
#    types: [published]

jobs:
  pypi-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
      with:  # no need for the history
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipx and ensure it's up to date
      run: |
        python -m pip install --upgrade pipx
        pipx ensurepath
      shell: bash
    - name: Install poetry
      run: pipx install poetry
      shell: bash
    # Cache Poetry dependencies to speed up builds
    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install poetry dynamic versioning tool
      run: poetry self add "poetry-dynamic-versioning[plugin]"
      shell: bash
    - name: Install dependencies with Poetry
      run: poetry install --with dev
      shell: bash
    - name: Configure Poetry PyPI token
      run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      shell: bash
    - name: Publish to PyPI
      run: poetry publish --build
      shell: bash




